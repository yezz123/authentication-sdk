[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "authentication_sdk"
description = "Authorization SDK used to build protected Web APIs âœ¨"
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
authors = [
    { name = "Yasser Tahiri", email = "hello@yezz.me" },
]
keywords = [
    "FastAPI",
    "Authentication",
    "Oauth2",
    "Pydantic",
    "JWT",
]

classifiers = [
    "License :: OSI Approved :: GNU General Public License (GPL)",
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",

    "Environment :: Plugins",
    "Environment :: Web Environment",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Developers",
    "Framework :: FastAPI",
    "Framework :: Django",
    "Framework :: Flask",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 1",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "Typing :: Typed",
]

dependencies = [
    "typing-extensions >=3.7.4,<4.7.0",
    "pydantic >=1.6.2,!=1.7,!=1.7.1,!=1.7.2,!=1.7.3,!=1.8,!=1.8.1,<2.0.0",
    "email-validator>=1.3.0",
]

dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/yezz123/authentication-sdk"
Funding = 'https://github.com/sponsors/yezz123'

[project.optional-dependencies]
lint = [
    "pre-commit==3.3.2",
    "mypy==1.3.0",
]
test = [
    "pytest==7.3.1",
    "pytest-asyncio == 0.21.0",
    "pytest-cov==4.0.0",
    "pytest-pretty",
]

[tool.hatch.version]
path = "authentication_sdk/__init__.py"

[tool.black]
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = true

[tool.isort]
profile = "black"
known_third_party = ["pydantic", "typing_extensions"]
line_length = 120
known_first_party = "pydantic"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true

[tool.ruff]
line-length = 120
mccabe = { max-complexity = 14 }
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["pydantic", "typing_extensions"]
[tool.coverage.run]
source = ["authentication_sdk"]
branch = true
context = '${CONTEXT}'

[tool.coverage.paths]
source = [
    "authentication_sdk/",
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.mypy]
exclude = 'authentication_sdk/__init__.py'
plugins = 'pydantic.mypy'
python_version = '3.11'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = false
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
implicit_optional = true

[[tool.mypy.overrides]]
module = [
    'dotenv.*',
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = "1"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
filterwarnings = [
    'error',
    'ignore::DeprecationWarning',
]